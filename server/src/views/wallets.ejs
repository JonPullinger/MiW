 <% money = n => n.toString().replace(/\d(?=(\d{3})+\.)/g, '$& ').replace(/(\.\d{3}( \d{3})*)(\d)/, '$1 $3').replace(/(\.\d{3}( \d{3})*)(\d)/, '$1 $3').replace(/(\.\d{3}( \d{3})*)(\d)/, '$1 $3').replace(/(\.\d{3}( \d{3})*)(\d)/, '$1 $3').replace(/ /g, ' ') usd = n => n.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$& ').replace(/ /g, ' ') %>
Export as CSV
<% for (let wallet of wallets) { %> <% if (token_values.ETH) { %> <% } else { %> <% } %> <% if (token_values[config.erc20.symbol]) { %> <% } else { %> <% } %> <% let tx = wallet.lastERC20SentTransfer; if (tx && tx.id) { %> <% } else { %> <% } %> <% tx = wallet.lastERC20ReceivedTransfer; if (tx && tx.id) { %> <% } else { %> <% } %> <% tx = wallet.lastETHSentTransfer; if (tx && tx.id) { %> <% } else { %> <% } %> <% tx = wallet.lastRTHReceivedTransfer; if (tx && tx.id) { %> <% } else { %> <% } %> <% } %> <% total_eth = wallets.reduce((r, w) => r + w.balance_eth, 0) total_erc20 = wallets.reduce((r, w) => r + w.balance_erc20, 0) %> <% if (token_values.ETH) { %> <% } else { %> <% } %> <% if (token_values[config.erc20.symbol]) { %> <% } else { %> <% } %>
Creation date 	Public Key 	ETH 	ETH (USD) 	<%= config.erc20.symbol %> 	<%= config.erc20.symbol %> (USD) 	Last sent transfer (<%= config.erc20.symbol %>) 		Last received transfer (<%= config.erc20.symbol %>) 		Last sent transfer (ETH) 		Last received transfer (ETH) 		Email 	IP
Invalid date 	<%= wallet.public_key %> 	<%- money(wallet.balance_eth) %> ETH	$<%- usd(wallet.balance_eth * token_values.ETH.price_usd) %> 	?	<%- money(wallet.balance_erc20) %> <%= config.erc20.symbol %>	$<%- usd(wallet.balance_erc20 * token_values[config.erc20.symbol].price_usd) %> 	?	<%= tx.to %>	<%- money(tx.amount) %> <%= config.erc20.symbol %>			<%= tx.from %>	<%- money(tx.amount) %> <%= config.erc20.symbol %>			<%= tx.to %>	<%- money(tx.amount) %> ETH			<%= tx.from %>	<%- money(tx.amount) %> ETH			<%= wallet.username %> 	<%= wallet.ip %>
Total 	<%- money(total_eth) %>ETH	$<%- usd(total_eth * token_values.ETH.price_usd) %> 	?	<%- money(total_erc20) %> <%= config.erc20.symbol %>	$<%- usd(total_erc20 * token_values[config.erc20.symbol].price_usd) %> 	?	
